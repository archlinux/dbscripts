#!/bin/bash

. "$(dirname $0)/config"
. "$(dirname $0)/db-functions"

if (( $# < 3 )); then
	msg "usage: ${0##*/} <repo> <arch> <pkgname|pkgbase> ..."
	exit 1
fi

repo="$1"
arch="$2"
pkgbases=(${@:3})

ftppath="$FTP_BASE/$repo/os"
svnrepo="$repo-$arch"

if ! check_repo_permission $repo; then
	die "You don't have permission to remove packages from %s" "$repo"
fi

if [[ $arch = any ]]; then
	tarches=(${ARCHES[@]})
else
	tarches=("$arch")
fi

for tarch in ${tarches[@]}; do
	repo_lock $repo $tarch || exit 1
done

remove_pkgs=()
for pkgbase in ${pkgbases[@]}; do
	msg "Removing %s from [%s]..." "$pkgbase" "$repo"
	arch_svn checkout -q "${SVNREPO}/${pkgbase}" "${WORKDIR}/svn/${pkgbase}" >/dev/null

	if [[ -d ${WORKDIR}/svn/$pkgbase/repos/$svnrepo ]]; then
		remove_pkgs+=($(. "${WORKDIR}/svn/$pkgbase/repos/$svnrepo/PKGBUILD"; echo ${pkgname[@]}))
		arch_svn rm --force -q "${WORKDIR}/svn/$pkgbase/repos/$svnrepo"
		arch_svn commit -q "${WORKDIR}/svn/$pkgbase" -m "${0##*/}: $pkgbase removed by $(id -un)"
	else
		warning "%s not found in %s" "$pkgbase" "$svnrepo"
		warning "Removing only %s from the repo" "$pkgbase"
		warning "If it was a split package you have to remove the others yourself!"
		remove_pkgs+=("$pkgbase")
	fi
done

for tarch in ${tarches[@]}; do
	arch_repo_remove "${repo}" "${tarch}" ${remove_pkgs[@]}
	repo_unlock $repo $tarch
done
