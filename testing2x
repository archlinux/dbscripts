#!/bin/bash

. "$(dirname "$(readlink -e "$0")")/config"
. "$(dirname "$(readlink -e "$0")")/db-functions"

if (( $# < 1 )); then
	msg "usage: %s <pkgname|pkgbase> ..." "${0##*/}"
	exit 1
fi

# Lock everything to reduce  possibility of interfering task between the different repo-updates
script_lock
for repo in "${TESTING_REPO}" "${STABLE_REPOS[@]}"; do
	for pkgarch in "${ARCHES[@]}"; do
		repo_lock "${repo}" "${pkgarch}" || exit 1
	done
done

declare -A pkgs

for pkgbase in "$@"; do
	found_source=false
	for tarch in "${ARCHES[@]}"; do
		if [[ -n $(arch_expac_pkgbase "$TESTING_REPO" "$tarch" '%n' "$pkgbase") ]]; then
			found_source=true
			break
		fi
	done
	[[ $found_source = true ]] || die "%s not found in [%s]" "$pkgbase" "$TESTING_REPO"
	found_target=false
	for tarch in "${ARCHES[@]}"; do
		for repo in "${STABLE_REPOS[@]}"; do
			if [[ -n $(arch_expac_pkgbase "$repo" "$tarch" '%n' "$pkgbase") ]]; then
				found_target=true
				pkgs[${repo}]+="${pkgbase} "
				break 2
			fi
		done
	done
	[[ $found_target = true ]] || die "%s not found in any of these repos: %s" "$pkgbase" "${STABLE_REPOS[*]}"
done

for pkgarch in "${ARCHES[@]}"; do
	repo_unlock "${TESTING_REPO}" "${pkgarch}"
done
for repo in "${STABLE_REPOS[@]}"; do
	for pkgarch in "${ARCHES[@]}"; do
		repo_unlock "${repo}" "${pkgarch}"
	done
	if [[ -n ${pkgs[${repo}]} ]]; then
		"$(dirname "$(readlink -e "$0")")/db-move" "${TESTING_REPO}" "${repo}" ${pkgs[${repo}]}
	fi
done

script_unlock
